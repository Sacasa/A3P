#BlueJ class context
comment0.params=
comment0.target=GameEngine()
comment0.text=\n\ Constructor\ for\ objects\ of\ class\ GameEngine\n
comment1.params=pUserInterface
comment1.target=void\ setGUI(UserInterface)
comment1.text=\n\ D\u00E9finit\ le\ GUI\n\ @param\ pUserInterface\ UserInterface\n
comment10.params=
comment10.target=pkg_mechanics.Parser\ getParser()
comment10.text=\n\ retourne\ le\ parser\n\ @return\ le\ parser\n
comment11.params=
comment11.target=void\ harakiri()
comment11.text=\n\ Permet\ de\ se\ suicider\n
comment12.params=
comment12.target=java.util.Stack\ getRoomStack()
comment12.text=\n\ retourne\ la\ pile\ de\ rooms\n\ @return\ pile\ de\ rooms\n\ \n
comment13.params=
comment13.target=java.util.ArrayList\ getRoomList()
comment13.text=\n\ REtourne\ la\ liste\ de\ room\n\ @return\ Liste\ de\ rooms\n
comment14.params=pCommand
comment14.target=void\ interpretCommand(pkg_command.Command)
comment14.text=\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\n\ If\ this\ command\ ends\ the\ game,\ true\ is\ returned,\ otherwise\ false\ is\n\ returned.\n\ @param\ pCommandLine\ commande\ \u00E0\ interpr\u00E9ter\n
comment15.params=
comment15.target=void\ printHelp()
comment15.text=\n\ Print\ out\ some\ help\ information.\n\ Here\ we\ print\ some\ stupid,\ cryptic\ message\ and\ a\ list\ of\ the\ \n\ command\ words.\n
comment16.params=
comment16.target=void\ clearStack()
comment16.text=\n\ Vide\ la\ pile\ de\ Rooms\n\ \n
comment17.params=pR
comment17.target=void\ oneMove(pkg_mechanics.Room)
comment17.text=\n\ Permet\ d'incr\u00E9menter\ le\ compteur\ de\ et\ de\ v\u00E9rifier\ si\ i\ lfaut\ arr\u00EAter\ la\ jeu\ \u00E0\ un\ d\u00E9placement\n\ @param\ pR\ pi\u00E8ce\ actuelle\ avant\ le\ d\u00E9placement\n\ \n
comment18.params=
comment18.target=void\ back()
comment18.text=\n\ Nous\ fait\ revenir\ \u00E0\ la\ salle\ pr\u00E9c\u00E9dente\n
comment19.params=
comment19.target=void\ mort()
comment19.text=\n\ \n\ Methode\ \u00E0\ appeler\ en\ cas\ de\ mort\n
comment2.params=
comment2.target=UserInterface\ getGUI()
comment2.text=\n\ retourne\ l'IHM\n\ @return\ l'interface\ graphique\n
comment20.params=
comment20.target=void\ endGame()
comment20.text=\n\ MEthode\ de\ fin\ de\ jeu\n
comment3.params=
comment3.target=pkg_mechanics.Player\ getPlayer()
comment3.text=\n\ retourne\ le\ player\n\ @return\ le\ player\n
comment4.params=
comment4.target=void\ printLocation()
comment4.text=\ \n\ Afiche\ le\ lieu\ actuel\ ainsi\ que\ les\ diff\u00E9rentes\ sorties\n\ \n
comment5.params=
comment5.target=void\ printWelcome()
comment5.text=\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\n
comment6.params=
comment6.target=void\ createRooms()
comment6.text=\n\ Create\ all\ the\ rooms\ and\ link\ their\ exits\ together.\n
comment7.params=
comment7.target=void\ look()
comment7.text=\n\ Permet\ de\ reafficher\ la\ description\ du\ lieu\ actuel\n
comment8.params=pB
comment8.target=void\ setTestMode(boolean)
comment8.text=\n\ Permet\ de\ changer\ le\ mode\ de\ Test\n\ @param\ pB\ \u00E9tat\ futur\ du\ mode\ de\ test\n\ \n
comment9.params=
comment9.target=boolean\ getTestMode()
comment9.text=\n\ Permet\ de\ r\u00E9cup\u00E9rer\ le\ mode\ de\ Test\n\ @return\ mode\ de\ test\n\ \n
numComments=21
